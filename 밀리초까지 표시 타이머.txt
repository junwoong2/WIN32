#include <windows.h>

LRESULT CALLBACK WndProc(HWND hwnd, UINT iMsg, 
         WPARAM wParam, LPARAM lParam);

LPCTSTR lpszClass = TEXT("메모짱");         // LPCSTR = char *

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, //WINAPI : 윈도우 프로그램이라는 의미
         LPSTR lpszCmdLine, int nCmdShow)                   //hInstance : 운영체제의 커널이 응용 프로그램에 부여한 ID
{                                                 //szCmdLine : 커멘트라인 상에서 프로그램 구동 시 전달된 문자열
   HWND   hwnd;                                     //iCmdShow : 윈도우가 화면에 출력될 형태
   MSG      msg;
   WNDCLASS WndClass;                                  //WndClass 라는 구조체 정의                            
   WndClass.style         = CS_HREDRAW | CS_VREDRAW;          //출력스타일 : 수직/수평의 변화시 다시 그림      //Horizontal, Vertical 
   WndClass.lpfnWndProc   = WndProc;                      //프로시저 함수명   
   WndClass.cbClsExtra      = 0;                         //O/S 사용 여분 메모리 (Class)
   WndClass.cbWndExtra      = 0;                         //O/s 사용 여분 메모리 (Window)
   WndClass.hInstance      = hInstance;                   //응용 프로그램 ID
   WndClass.hIcon         = LoadIcon(NULL, IDI_QUESTION);    //아이콘 유형
   WndClass.hCursor      = LoadCursor(NULL, IDC_ARROW);       //커서 유형
   WndClass.hbrBackground   = (HBRUSH)GetStockObject(WHITE_BRUSH);//배경색   
   WndClass.lpszMenuName   = NULL;                         //메뉴 이름
   WndClass.lpszClassName   = lpszClass;                   //클래스 이름
   RegisterClass(&WndClass);                            //앞서 정의한 윈도우 클래스의 주소 // os 에다가 지금 이 클래스를 등록시킴 

   hwnd = CreateWindow(lpszClass,                         //윈도우가 생성되면 핸들(hwnd)이 반환      //실제 윈도우를 만들기 시작 
      lpszClass,                        
        WS_OVERLAPPEDWINDOW,                        
        100,              //x좌표                   
        100,              //y좌표             
        640,              //너비
        320,              //높이     
        NULL,                         
        NULL,                                    
        hInstance,                            
        NULL                                          //생성된 윈도우 정보
   );
   ShowWindow(hwnd, nCmdShow);                            //윈도우의 화면 출력
   UpdateWindow(hwnd);                                  //O/S 에 WM_PAINT 메시지 전송

   while(GetMessage(&msg, NULL, 0, 0))                      //WinProc()에서 PostQuitMessage() 호출 때까지 처리
   {                                              // 
      TranslateMessage(&msg);
      DispatchMessage(&msg);                            //WinMain -> WinProc  
   }
   return (int)msg.wParam;
}

HDC hdc;

int time = 0;
int min = 0;
int sec = 0;
static TCHAR clock[9];
LRESULT CALLBACK WndProc(HWND hwnd, UINT iMsg, WPARAM wParam, LPARAM lParam)     
{

   PAINTSTRUCT ps;

   
    
   switch (iMsg) 
   {
   case WM_CREATE:         // 윈도우가 생성 (처음생성 될경우) // 단 한번 실행됨 
      SetTimer(hwnd, 1, 1, NULL);
      break;

    case WM_TIMER:
      if(wParam == 1)
      {
        if(sec >= 60){
           sec=0;
           min++;
        }
        else{
           sec++;
        }
        if(min == 60){
           min=0;
           time++;
        }
        else{
           sec++;
        }
        if(time == 24){
           time=0;
        }

     }

   case WM_CHAR:
      InvalidateRect(hwnd, NULL, TRUE);
      break; 
   case WM_PAINT:
      hdc = BeginPaint(hwnd, &ps);
        TextOut(hdc,100,50,TEXT("My First Exam"),13);


      wsprintf(clock,TEXT("%d:%d:%d"),time,min,sec);
        TextOut(hdc,450,30,clock,lstrlen(clock));
      EndPaint(hwnd,&ps);
      break;
   case WM_DESTROY:         //프로그램 종료 처리 // 예를들어 동적할당들을 했으면 꼭 해지를 해야함
      PostQuitMessage(0);
      break;
   } 
   return DefWindowProc(hwnd, iMsg, wParam, lParam);          //CASE에서 정의되지 않은 메시지는 커널이 처리하도록 메시지 전달
}
//비트맵 추가하기